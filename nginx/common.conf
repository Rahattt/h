location ~* `([^\b])(?<uuid>\w{32})[\/]?(?<proto>trojan)?[\/]?$` {
   proxy_redirect off;
   proxy_http_version 1.1;
   proxy_pass https://127.0.0.1:1005/$uuid/;
   proxy_ssl_server_name on;
   proxy_ssl_name $http_host;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection "upgrade";
   proxy_set_header Host $http_host;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
location ~* `([^\b])(?<uuid>\w{32})[\/]?(?<proto>v2ray)?[\/]?$` {
  #for performance
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_pass http://127.0.0.1:1003/; # Port of v2ray-plugin
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
  proxy_set_header Host $http_host;
  # Show real IP if you enable V2Ray access log
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
location ~* `([^\b])(?<uuid>\w{32})[\/]?(?<proto>vmess)?[\/]?$` {
  #for performance
  proxy_redirect off;
  proxy_http_version 1.1;
  proxy_pass http://127.0.0.1:1004/; # Port of v2ray-plugin
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
  proxy_set_header Host $http_host;
  # Show real IP if you enable V2Ray access log
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
location ~* `([^\b])(?<uuid>\w{32})[\/]?(?<proto>signal)?[\/]?$` {
    proxy_pass            https://localhost:4433;
}

#location /defaultusersecret/ {
  if ($request_uri ~ "([^\b])(?<uuid>\w{32})[\/]?redirect/(.*)(%3A%2F%2F|://)(.*)$") {
    return 307 $1://$3;
  }
  #location = /defaultusersecret/ {
  #  return 302 help/index.html;
  #}

  location `([^\b])(?<uuid>\w{32})[\/]?(?<proto>help)?[\/]?$` { #for help
    return 302 ../;
  }

  
  location ~* `([^\b])(?<uuid>(?<guid1>\w{8})[\-]?(?<guid2>\w{4})[\-]?(?<guid3>\w{4})[\-]?(?<guid4>\w{4})[\-]?(?<guid5>\w{12}))[\/]?(clash)?[\/]?$` {
    #for clash configs
     set $guid "$guid1-$guid2-$guid3-$guid4-$guid5";
     alias /opt/GITHUB_REPOSITORY/clash/;
     types { }   default_type "text/plain";
     sub_filter_types text/plain;
     sub_filter usersecret $uuid;
     sub_filter userguidsecret $guid;
     include /opt/GITHUB_REPOSITORY/nginx/replace.conf;
     sub_filter_once off;
  }
  
  location `([^\b])(?<uuid>\w{32})[\/]?(?<proto>dns)?[\/]?$` {
    # use it in your browser as https://defaultserverhost/defaultusersecret/dns/dns-query{?dns}
    proxy_pass https://dns.google:443/; 
  }
  location `([^\b])(?<uuid>\w{32})[\/]?(?<proto>stats)?[\/]?$` {
    proxy_pass http://localhost:440/; 
  }
  location `([^\b])(?<uuid>\w{32})[\/]?$` { #for help
    set $guid "$guid1-$guid2-$guid3-$guid4-$guid5";
    alias /opt/GITHUB_REPOSITORY/web/;
    sub_filter_types text/plain text/html;
    sub_filter usersecret $uuid;
    sub_filter userguidsecret $guid;
    include /opt/GITHUB_REPOSITORY/nginx/replace.conf;
    sub_filter_once off;
  }
#}

include /opt/GITHUB_REPOSITORY/nginx/def-link.conf;

resolver 8.8.8.8;